设计模式：责任链模式
根据书籍内容，责任链主要是用于对数据进行一系列的连贯处理，就像java web中的filter过滤器，每当我们新增一个filter时就相当于在处理流程的
责任链中增加一个处理对象，并且按照filter的执行顺序对其进行处理。通常需要实现一个接口，用于保证每次方法调用的一致性，并且利用接口实现，保证每个对象
的引用可以指向链（数组或链表）中，并且为了扩充对request和response的不重复处理，在参数中选择同时将两者列为参数传入，并且通过类似递归调用的方式，使
程序可以在进入时顺序处理，返回时逆向处理数据。

为什么会想到去看设计模式？主要是因为自己在开发过程中，发觉重复性代码太多，但自己在开发最初阶段却没有想过对他们进行规划，对代码做合并或归纳，每当遇到
新需求或类似的需求，都是通过新增类去处理，感觉对这种状态很厌恶，主观上觉得学习设计模式应该会有所帮助。

接触设计模式之后的体会：接触时间没多久，只是利用下班时间看了些视频，视频的代码并没有跟着敲，但还是有所体会，就是对于掌握设计模式或者说有一个比较优良
的java代码风格和思路，对于继承和多台的思考，以及接口的利用确实需要比较深刻的体会和理解。

这周还看了些hadoop的入门，我们公司本身是做财务的，内容比较枯燥，但我认为也算是做数据的，所以就看了些基础的hadoop。对map，reduce和hdfs的原理有了一定的
印象。

我们公司一般九点半下班，加上最近变成单休（加班）了，所以学习内容有限，希望各位能谅解。我一定会坚持，并且逐步完善自己的笔记，让看我笔记的人也能有所提高。
